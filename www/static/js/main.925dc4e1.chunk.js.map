{"version":3,"sources":["store/actions/actionTypes.ts","store/actions/auth.ts","store/actions/products.ts","store/actions/result.ts","store/actions/geolocation.ts","components/text-field/TextField.tsx","components/buttons/Button.tsx","pages/register-page/RegisterPage.tsx","components/buttons/LinkButton.tsx","components/error-message/ErrorMessage.tsx","pages/login-page/LoginPage.tsx","components/circular-progress/CircularProgress.tsx","assets/YARA_RGB.png","components/loadingScreen/LoadingScreen.tsx","pages/loading-page/LoadingPage.tsx","components/list/List.tsx","components/buttons/LanguageButton.tsx","components/list/list-item/ListItem.tsx","components/user-info/UserInfo.tsx","components/weather-info/WeatherInfo.tsx","components/app-bar/AppBar.tsx","pages/PageLayout.tsx","components/tooltip/TooltipAdd.tsx","pages/home-page/HomePage.tsx","components/list/list-item-action/ListItemAction.tsx","components/backdrop/Backdrop.tsx","pages/mix-products-page/MixProductsPage.tsx","components/product-img/ImageComponent.tsx","components/result-product-card/ResultProductCard.tsx","pages/mix-result-page/MixResultPage.tsx","utils/options.ts","pages/add-product-page/AddProductPage.tsx","components/list/list-item-result/ListItemResult.tsx","pages/user-results-page/UserResultsPage.tsx","App.tsx","i18n.ts","utils/dbSetupFuncs.ts","store/reducers/auth.ts","store/reducers/products.ts","store/reducers/result.ts","store/reducers/geolocation.ts","index.tsx","utils/notificationSetup.ts"],"names":["AUTH_START","AUTH_SUCCESS","AUTH_FAILED","AUTH_LOGOUT","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAILED","CREATE_PRODUCT_SUCCESS","CREATE_PRODUCT_FAILED","CREATE_PRODUCT_CLEANUP","MIX_RESULT_START","MIX_RESULT_SUCCESS","MIX_RESULT_FAILED","MIX_RESULT_CLEANUP","ADD_RESULT_TO_USER_RESULTS","GEOLOCATION_SUCCESS","GEOLOCATION_FAILED","authSuccess","userData","results","type","actionTypes","data","dataResults","authStart","authFailed","err","logout","localStorage","removeItem","dispatch","actionLogout","getAllProducts","window","db","transaction","tx","executeSql","rs","resultArray","i","rows","length","push","item","getAllProductsSuccess","error","getAllProductsFailed","console","log","message","createProductSuccess","createProductFailed","mixResultSuccess","mixData","mixResultStart","mixResultFailed","addResultToUserResults","getLocationWeatherFailed","InputElement","props","TextField","id","name","placeholder","value","onChange","e","onBlur","label","multiline","autoFocus","required","color","margin","fullWidth","size","variant","useStyles","makeStyles","theme","createStyles","btn","marginTop","spacing","marginBottom","backgroundColor","CustomButton","classes","Button","className","onClick","children","RegisterPage","user","useSelector","state","auth","t","useTranslation","useDispatch","useState","email","setEmail","password","setPassword","rePassword","setRePassword","onChangeHandler","target","prevState","onBlurHandler","to","Typography","align","gutterBottom","onSubmit","preventDefault","setItem","isAdmin","registerUser","LinkButton","component","RouterLink","replace","ErrorMessage","Alert","severity","LoginPage","StatusBar","show","backgroundColorByHexString","styleDefault","authenticate","root","CircularProgressCustom","CircularProgress","LoadingScreen","src","yara_logo","alt","LoadingPage","isDone","ListComponent","List","ListSubheader","subHeader","marginLeft","paddingTop","paddingBottom","LanguageButton","ListItemComponent","ListItem","button","divider","disabled","ListItemText","primary","content","avatar","UserInfo","geolocation","CardHeader","Avatar","aria-label","toUpperCase","title","subheader","location","WeatherInfo","weather","split","text","temp","Box","m","p","flexGrow","display","appBar","position","zIndex","drawer","menuButton","marginRight","addButton","width","flexShrink","drawerPaper","drawerContainer","overflow","AppBarComponent","history","useHistory","i18n","isOpen","setIsOpen","update","setUpdate","useEffect","navigator","getCurrentPosition","language","getItem","coords","latitude","longitude","enableHighAccuracy","changeLang","lang","changeLanguage","CssBaseline","AppBar","Toolbar","IconButton","edge","Drawer","open","paper","ListItemSecondaryAction","Divider","PageLayout","styleLightContent","bottom","right","TooltipAdd","Tooltip","Fab","HomePage","backdrop","BackdropCustom","Backdrop","MixProductsPage","products","result","selectedProducts","setSelectedProducts","onListItemClickHandler","newArray","map","x","onDeleteListHandler","filter","done","loading","ListItemAction","px","setTimeout","finalResult","user_email","f_product","s_product","datetime","Date","toString","cordova","plugins","notification","local","schedule","mixResult","sort","some","ImageConponent","source","startsWith","height","marginBlock","ResultProductCard","Card","CardContent","product","imageURL","description","MixResultPage","actionSheetOptions","buttonLabels","androidEnableCancelButton","addCancelButtonWithLabel","AddProductPage","productName","setProductName","productDesc","setProductDesc","image","setImage","actionSheetCallback","buttonIndex","camera","getPicture","photo","alert","quality","destinationType","Camera","DestinationType","DATA_URL","sourceType","PictureSourceType","CAMERA","saveToPhotoAlbum","PHOTOLIBRARY","isAddingDone","actionsheet","ListItemResult","secondary","date","UserResultPage","userResults","reverse","App","exact","path","resources","en","translation","bg","use","LanguageDetector","initReactI18next","init","detection","order","lookupQuerystring","lookupCookie","lookupLocalStorage","lookupSessionStorage","lookupFromPathIndex","lookupFromSubdomainIndex","caches","excludeCacheFor","fallbackLng","interpolation","escapeValue","format","moment","createTables","seedTables","productsCount","initialState","reducer","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","document","addEventListener","a","sqlitePlugin","openDatabase","hide","setDefaults","smallIcon","foreground","vibrate","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.925dc4e1.chunk.js","sourcesContent":["import { MixResult, Product, User } from \"../../interfaces\"\n\nexport const AUTH_START = 'AUTH_START'\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS'\nexport const AUTH_FAILED = 'AUTH_FAILED'\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\n\ninterface AuthStartAction {\n    type: typeof AUTH_START;\n};\n\ninterface AuthLogOutAction {\n    type: typeof AUTH_LOGOUT;\n};\n\ninterface AuthSuccessAction {\n    type: typeof AUTH_SUCCESS;\n    data: User;\n    dataResults: MixResult[];\n};\n\ninterface AuthFailedAction {\n    type: typeof AUTH_FAILED;\n    err: string;\n};\n\ninterface addResultToUserResultsAction {\n    type: typeof ADD_RESULT_TO_USER_RESULTS;\n    data: MixResult;\n}\n\nexport type AuthActionTypes = AuthStartAction | AuthLogOutAction | AuthFailedAction | AuthSuccessAction | addResultToUserResultsAction\n\n// Products\n\nexport const GET_PRODUCTS_SUCCESS = 'GET_PRODUCTS_SUCCESS'\nexport const GET_PRODUCTS_FAILED = 'GET_PRODUCTS_FAILED'\nexport const CREATE_PRODUCT_SUCCESS = 'CREATE_PRODUCT_SUCCESS'\nexport const CREATE_PRODUCT_FAILED = 'CREATE_PRODUCT_FAILED'\nexport const CREATE_PRODUCT_CLEANUP = 'CREATE_PRODUCT_CLEANUP'\n\ninterface GetProductsSuccessAction {\n    type: typeof GET_PRODUCTS_SUCCESS;\n    data: Product[];\n}\n\ninterface GetProductsFailedAction {\n    type: typeof GET_PRODUCTS_FAILED;\n    err: string;\n}\n\ninterface CreateProductSuccess {\n    type: typeof CREATE_PRODUCT_SUCCESS;\n    data: Product;\n}\n\ninterface CreateProductFailed {\n    type: typeof CREATE_PRODUCT_FAILED;\n    err: string;\n}\n\ninterface CreateProductCleanup {\n    type: typeof CREATE_PRODUCT_CLEANUP;\n}\n\nexport type GetProductsActionTypes = GetProductsSuccessAction | GetProductsFailedAction | CreateProductFailed | CreateProductSuccess | CreateProductCleanup\n\n// Result\n\nexport const MIX_RESULT_START = 'MIX_RESULT_START'\nexport const MIX_RESULT_SUCCESS = 'MIX_RESULT_SUCCESS'\nexport const MIX_RESULT_FAILED = 'MIX_RESULT_FAILED'\nexport const MIX_RESULT_CLEANUP = 'MIX_RESULT_CLEANUP'\nexport const ADD_RESULT_TO_USER_RESULTS = 'ADD_RESULT_TO_USER_RESULTS'\n\ninterface MixResultStartAction {\n    type: typeof MIX_RESULT_START;\n}\n\ninterface MixResultSuccessAction {\n    type: typeof MIX_RESULT_SUCCESS;\n    data: Product[];\n}\n\ninterface MixResultFailedAction {\n    type: typeof MIX_RESULT_FAILED\n    err: string;\n}\n\ninterface MixResultCleanupAction {\n    type: typeof MIX_RESULT_CLEANUP;\n}\n\nexport type MixResultActionTypes = MixResultStartAction | MixResultSuccessAction | MixResultFailedAction | MixResultCleanupAction\n\n// Location API\n\nexport const GEOLOCATION_SUCCESS = 'GEOLOCATION_SUCCESS'\nexport const GEOLOCATION_FAILED = 'GEOLOCATION_FAILED'\n\ninterface GeolocationSuccessAction {\n    type: typeof GEOLOCATION_SUCCESS;\n    location: string;\n    weather: string;\n}\n\ninterface GeolocationFailedAction {\n    type: typeof GEOLOCATION_FAILED;\n}\n\nexport type GeolocationActionTypes = GeolocationSuccessAction | GeolocationFailedAction","import { getAllProducts } from '.';\nimport { MixResult, User } from '../../interfaces';\nimport * as actionTypes from './actionTypes';\n// import { getUserInformationSuccess } from './index'\n\ndeclare let window: any\n\n// loggin\nexport const registerUser = (email: string, password: string) => {\n    return (dispatch: any) => {\n        const isAdmin: number = 0;\n        dispatch(authStart())\n        window.db.transaction(function (tx: any) {\n            tx.executeSql('INSERT INTO users VALUES(?1, ?2, ?3)', [email, password, isAdmin], function (tx: any, rs: any) {\n                localStorage.setItem('email', email)\n                localStorage.setItem('password', password)\n                dispatch(authSuccess({ email, password, isAdmin }, []))\n            }, function (tx: any, error: any) {\n                dispatch(authFailed(error.message))\n                console.log('SELECT error: ' + error.message)\n            })\n        })\n    }\n}\n\nexport const authenticate = (email: string, password: string) => {\n    return (dispatch: any) => {\n        dispatch(authStart())\n\n        window.db.transaction(function (tx: any) {\n            tx.executeSql('SELECT * FROM users WHERE email = ?1 AND password = ?2', [email, password], function (tx: any, rs: any) {\n                if (rs.rows.length === 1) {\n                    const user = { ...rs.rows.item(0) }\n                    localStorage.setItem('email', user.email)\n                    localStorage.setItem('password', user.password)\n                    window.db.transaction(function (tx: any) {\n                        tx.executeSql('SELECT * FROM results WHERE user_email = ?1', [user.email], (tx: any, rs: any) => {\n                            const results: MixResult[] = [];\n                            for (let i = 0; i < rs.rows.length; i++) {\n                                results.push(rs.rows.item(i))\n                            }\n                            dispatch(authSuccess(user, results))\n                        })\n                    })\n                } else {\n                    dispatch(logout())\n                }\n            }, function (tx: any, error: any) {\n                dispatch(authFailed(error.message))\n                console.log('SELECT error: ' + error.message)\n            })\n        })\n    }\n}\n\nexport const initialAuthCheckAndSetup = () => {\n    return (dispatch: any) => {\n        const email = localStorage.getItem('email');\n        const password = localStorage.getItem('password');\n        setTimeout(() => {\n            dispatch(authStart())\n            dispatch(getAllProducts())\n            window.db.transaction(function (tx: any) {\n                tx.executeSql('SELECT * FROM users WHERE email = ?1 AND password = ?2', [email, password], function (tx: any, rs: any) {\n                    if (rs.rows.length === 1) {\n                        const user = { ...rs.rows.item(0) }\n                        localStorage.setItem('email', user.email)\n                        localStorage.setItem('password', user.password)\n                        localStorage.setItem('isAdmin', user.isAdmin)\n                        window.db.transaction(function (tx: any) {\n                            tx.executeSql('SELECT * FROM results WHERE user_email = ?1', [user.email], (tx: any, rs: any) => {\n                                const results: MixResult[] = [];\n                                for (let i = 0; i < rs.rows.length; i++) {\n                                    results.push(rs.rows.item(i))\n                                }\n                                dispatch(authSuccess(user, results))\n                            })\n                        })\n                    } else {\n                        dispatch(logout())\n                    }\n                }, function (tx: any, error: any) {\n                    dispatch(authFailed(error.message))\n                    console.log('SELECT error: ' + error.message)\n                })\n            })\n        }, 2000);\n    }\n}\n\n// ----------------------------------------\n\nconst authSuccess = (userData: User, results: MixResult[]) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        data: userData,\n        dataResults: results\n    }\n}\n\nconst authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nconst authFailed = (err: string) => {\n    return {\n        type: actionTypes.AUTH_FAILED,\n        err\n    }\n}\n\n// Logout\n\nexport const logout = () => {\n    localStorage.removeItem('email')\n    localStorage.removeItem('password')\n    localStorage.removeItem('isAdmin')\n    return (dispatch: any) => {\n        dispatch(actionLogout())\n    }\n}\n\nconst actionLogout = () => {\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    }\n}","import * as actionTypes from './actionTypes'\nimport { Product } from \"../../interfaces\"\n\ndeclare let window: any\n\nexport const createProduct = (name: string, description: string, imageURL: string | null) => {\n    return (dispatch: any) => {\n        const product: Product = { name, description, imageURL }\n        window.db.transaction(function (tx: any) {\n            tx.executeSql('INSERT INTO products VALUES(?1, ?2, ?3)', [name, description, imageURL], function (tx: any, rs: any) {\n                dispatch(createProductSuccess(product))\n            }, function (tx: any, error: any) {\n                dispatch(createProductFailed(error.message))\n                console.log('SELECT error: ' + error.message)\n            })\n        })\n    }\n}\n\nexport const getAllProducts = () => {\n    return (dispatch: any) => {\n        window.db.transaction(function (tx: any) {\n            tx.executeSql(\"SELECT * FROM products\", [], function (tx: any, rs: any) {\n                const resultArray: Product[] = [];\n                for (let i = 0; i < rs.rows.length; i++) {\n                    resultArray.push({ ...rs.rows.item(i) });\n                }\n                dispatch(getAllProductsSuccess(resultArray))\n            },\n                function (tx: any, error: any) {\n                    dispatch(getAllProductsFailed('Something went wrong'))\n                    console.log(\"SELECT error: \" + error.message);\n                }\n            );\n        });\n    }\n}\n\nconst getAllProductsSuccess = (userData: Product[]) => {\n    return {\n        type: actionTypes.GET_PRODUCTS_SUCCESS,\n        data: [...userData]\n    }\n}\n\nconst getAllProductsFailed = (err: string) => {\n    return {\n        type: actionTypes.GET_PRODUCTS_FAILED,\n        err\n    }\n}\n\nconst createProductSuccess = (data: Product) => {\n    return {\n        type: actionTypes.CREATE_PRODUCT_SUCCESS,\n        data\n    }\n}\n\nconst createProductFailed = (err: string) => {\n    return {\n        type: actionTypes.CREATE_PRODUCT_FAILED,\n        err\n    }\n}\n\nexport const createProductCleanup = () => {\n    return {\n        type: actionTypes.CREATE_PRODUCT_CLEANUP\n    }\n}","import { MixResult, Product } from \"../../interfaces\"\nimport * as actionTypes from './actionTypes';\n\ndeclare let window: any\ndeclare let cordova: any\n\nexport const mixResult = (email: string, selectedProducts: Product[]) => {\n    return (dispatch: any) => {\n        dispatch(mixResultStart())\n        setTimeout(() => {\n            window.db.transaction(function (tx: any) {\n                const finalResult: MixResult = {\n                    user_email: email,\n                    f_product: selectedProducts[0].name,\n                    s_product: selectedProducts[1].name,\n                    datetime: (new Date()).toString()\n                }\n                tx.executeSql('INSERT INTO results VALUES(?1, ?2, ?3, ?4)', [finalResult.user_email, finalResult.f_product, finalResult.s_product, finalResult.datetime],\n                    function (tx: any, rs: any) {\n                        dispatch(mixResultSuccess(selectedProducts));\n                        dispatch(addResultToUserResults(finalResult));\n                        cordova.plugins.notification.local.schedule({\n                            title: 'Your Mix Result is ready!',\n                            text: 'Click to view it...',\n                        });\n                    },\n                    function (tx: any, error: any) {\n                        mixResultFailed('Something went wrong')\n                        console.log(\"SELECT error: \" + error.message);\n                    }\n                );\n            });\n        }, 1500);\n    }\n}\n\nexport const mixResultCleanUp = () => {\n    return {\n        type: actionTypes.MIX_RESULT_CLEANUP\n    }\n}\n\nconst mixResultSuccess = (mixData: Product[]) => {\n    return {\n        type: actionTypes.MIX_RESULT_SUCCESS,\n        data: [...mixData]\n    }\n}\n\nconst mixResultStart = () => {\n    return {\n        type: actionTypes.MIX_RESULT_START\n    }\n}\n\nconst mixResultFailed = (err: string) => {\n    return {\n        type: actionTypes.MIX_RESULT_FAILED,\n        err\n    }\n}\n\nconst addResultToUserResults = (data: MixResult) => {\n    return {\n        type: actionTypes.ADD_RESULT_TO_USER_RESULTS,\n        data\n    }\n}","import * as actionTypes from './actionTypes';\n\nexport const getLocationWeather = () => {\n    return (dispatch: any) => {\n        navigator.geolocation.getCurrentPosition((position: any) => {\n            const baseURL: string = 'https://dataservice.accuweather.com/locations/v1/cities/geoposition'\n            const apiKey: string = 'OlQZWfzAJd52tODy4jquHVS9GGIoC3Dy'\n            const language: string = localStorage.getItem('i18nextLng') || 'en';\n            const coordinates: string = `${position.coords.latitude},${position.coords.longitude}&language=${language}`;\n            // fetch(`${baseURL}/search?apikey=${apiKey}&q=${coordinates}`)\n            //     .then(res => res.json())\n            //     .then(res => {\n            //         const location: string = `${res.LocalizedName}, ${res.Country.LocalizedName}`;\n            //         fetch(`https://dataservice.accuweather.com/currentconditions/v1/${res.Key}?apikey=${apiKey}&language=${language}`)\n            //             .then(res => res.json())\n            //             .then(res => {\n            //                 const weather: string = `${res[0].WeatherText}&${res[0].Temperature.Metric.Value} C`;\n            //                 dispatch(getLocationWeatherSuccess(location, weather))\n            //             })\n            //             .catch(err => dispatch(getLocationWeatherFailed()))\n            //     })\n            //     .catch(err => dispatch(getLocationWeatherFailed()))\n        }, () => dispatch(getLocationWeatherFailed()), { enableHighAccuracy: true });\n    }\n}\n\nconst getLocationWeatherSuccess = (location: string, weather: string) => {\n    return {\n        type: actionTypes.GEOLOCATION_SUCCESS,\n        location,\n        weather\n    }\n}\n\nconst getLocationWeatherFailed = () => {\n    return {\n        type: actionTypes.GEOLOCATION_FAILED\n    }\n}","import React from 'react'\r\nimport { TextField } from '@material-ui/core'\r\n\r\ninterface InputProps {\r\n    autoFocus?: true\r\n    id: string\r\n    type: string\r\n    label: string\r\n    name?: string\r\n    onChange: (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void\r\n    onBlur: (e: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => void\r\n    placeholder: string\r\n    required?: false\r\n    multiline?: true\r\n    value: string | number\r\n}\r\n\r\nconst InputElement: React.FC<InputProps> = props => {\r\n    return <TextField\r\n        type={props.type}\r\n        id={props.id}\r\n        name={props.name}\r\n        placeholder={props.placeholder}\r\n        value={props.value}\r\n        onChange={(e) => props.onChange(e)}\r\n        onBlur={(e) => props.onBlur(e)}\r\n        error={props.label ? true : false}\r\n        label={props.label}\r\n        multiline={props.multiline ? props.multiline : false}\r\n        autoFocus={props.autoFocus ? props.autoFocus : false}\r\n        required={!props.required ? true : props.required}\r\n        color=\"primary\"\r\n        margin=\"dense\"\r\n        fullWidth={true}\r\n        size=\"medium\"\r\n        variant=\"outlined\"\r\n    />\r\n}\r\n\r\nexport default InputElement","import React from 'react'\r\nimport { Button } from '@material-ui/core'\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        btn: {\r\n            marginTop: theme.spacing(1),\r\n            marginBottom: theme.spacing(1),\r\n            backgroundColor: \"#00205b\",\r\n            color: \"white\"\r\n        },\r\n    }),\r\n)\r\n\r\ninterface ButtonProps {\r\n    variant?: \"text\" | \"outlined\" | \"contained\" | undefined\r\n    type?: \"submit\"\r\n    size?: \"small\" | \"medium\" | \"large\" | undefined\r\n    onClick?: () => void\r\n}\r\n\r\nconst CustomButton: React.FC<ButtonProps> = (props) => {\r\n    const classes = useStyles()\r\n\r\n    return <Button\r\n        className={classes.btn}\r\n        type={props.type ? props.type : 'button'}\r\n        fullWidth={true}\r\n        color=\"primary\"\r\n        size={props.size}\r\n        variant={props.variant ? props.variant : \"contained\"}\r\n        onClick={props.onClick}\r\n    >\r\n        {props.children}\r\n    </Button>\r\n}\r\n\r\nexport default CustomButton","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Typography } from '@material-ui/core'\r\nimport { Redirect } from 'react-router-dom'\r\nimport TextField from '../../components/text-field/TextField'\r\nimport Button from '../../components/buttons/Button'\r\nimport { registerUser } from '../../store/actions/index'\r\nimport { RootState } from '../../store/types'\r\nimport { InputValues } from '../../interfaces'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst RegisterPage: React.FC = (props) => {\r\n    const user = useSelector((state: RootState) => state.auth)\r\n    const { t } = useTranslation()\r\n    const dispatch = useDispatch()\r\n    const [email, setEmail] = useState<InputValues>({ error: '', value: '' })\r\n    const [password, setPassword] = useState<InputValues>({ error: '', value: '' })\r\n    const [rePassword, setRePassword] = useState<InputValues>({ error: '', value: '' })\r\n\r\n    const onChangeHandler = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\r\n        if (e.target.id === \"email\")\r\n            setEmail(prevState => { return { ...prevState, value: e.target.value } })\r\n        else if (e.target.id === \"password\")\r\n            setPassword(prevState => { return { ...prevState, value: e.target.value } })\r\n        else if (e.target.id === \"rePassword\")\r\n            setRePassword(prevState => { return { ...prevState, value: e.target.value } })\r\n    }\r\n\r\n    const onBlurHandler = (e: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\r\n        if (e.target.id === \"password\") {\r\n            // password validator\r\n        }\r\n        else if (e.target.id === \"rePassword\") {\r\n            if (rePassword.value !== password.value)\r\n                setRePassword(prevState => { return { ...prevState, error: t('formErrors.rePassword') } })\r\n            else\r\n                setRePassword(prevState => { return { ...prevState, error: '' } })\r\n        }\r\n    }\r\n\r\n    const onSubmitHandler = (e: React.FormEvent) => {\r\n        e.preventDefault()\r\n        if (email.value === '' || password.value === '' || rePassword.value === '') {\r\n            return\r\n        } else {\r\n            dispatch(registerUser(email.value, password.value))\r\n        }\r\n    }\r\n\r\n    if (user.data) {\r\n        return <Redirect to='/home' />\r\n    }\r\n\r\n    return <div className=\"center-middle-screen\">\r\n        <Typography variant=\"h5\" align=\"center\" gutterBottom>{t('signup')}</Typography>\r\n        <form onSubmit={onSubmitHandler}>\r\n            <TextField\r\n                id=\"email\"\r\n                type=\"email\"\r\n                label={email.error}\r\n                value={email.value}\r\n                placeholder={t('formPlaceholders.email')}\r\n                onChange={onChangeHandler}\r\n                onBlur={onBlurHandler} />\r\n            <TextField\r\n                id=\"password\"\r\n                type=\"password\"\r\n                label={password.error}\r\n                value={password.value}\r\n                placeholder={t('formPlaceholders.password')}\r\n                onChange={onChangeHandler}\r\n                onBlur={onBlurHandler} />\r\n            <TextField\r\n                id=\"rePassword\"\r\n                type=\"password\"\r\n                label={rePassword.error}\r\n                value={rePassword.value}\r\n                placeholder={t('formPlaceholders.rePassword')}\r\n                onChange={onChangeHandler}\r\n                onBlur={onBlurHandler} />\r\n            <Button type=\"submit\">{t('register')}</Button>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default RegisterPage","import React from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button'\r\n\r\ninterface LinkButtonProps {\r\n    to: string;\r\n    replace?: true;\r\n}\r\n\r\nconst LinkButton: React.FC<LinkButtonProps> = props => {\r\n    return <Button color=\"primary\" fullWidth={true} component={RouterLink} to={props.to} replace={props.replace ? props.replace : false}>\r\n        {props.children}\r\n    </Button>\r\n}\r\n\r\nexport default LinkButton","import React from 'react'\r\nimport { Alert } from '@material-ui/lab'\r\n\r\ninterface ErrorMessageProps {\r\n    message: string\r\n}\r\n\r\nconst ErrorMessage: React.FC<ErrorMessageProps> = props => {\r\n    return (\r\n        <Alert severity=\"error\">\r\n            {props.message}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Typography } from '@material-ui/core'\r\nimport { Redirect } from 'react-router-dom'\r\nimport TextField from '../../components/text-field/TextField'\r\nimport Button from '../../components/buttons/Button'\r\nimport LinkButton from '../../components/buttons/LinkButton'\r\nimport ErrorMessage from '../../components/error-message/ErrorMessage'\r\nimport { authenticate } from '../../store/actions'\r\nimport { RootState } from '../../store/types'\r\nimport { InputValues } from '../../interfaces'\r\nimport { useTranslation } from 'react-i18next'\r\ndeclare let StatusBar: any;\r\n\r\nconst LoginPage: React.FC = (props) => {\r\n    StatusBar.show();\r\n    StatusBar.backgroundColorByHexString('#fff');\r\n    StatusBar.styleDefault();\r\n\r\n    const user = useSelector((state: RootState) => state.auth)\r\n    const dispatch = useDispatch()\r\n    const { t } = useTranslation()\r\n    const [email, setEmail] = useState<InputValues>({ error: '', value: '' })\r\n    const [password, setPassword] = useState<InputValues>({ error: '', value: '' })\r\n\r\n    const onChangeHandler = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\r\n        if (e.target.id === \"email\")\r\n            setEmail(prevState => { return { ...prevState, value: e.target.value } })\r\n        else if (e.target.id === \"password\")\r\n            setPassword(prevState => { return { ...prevState, value: e.target.value } })\r\n    }\r\n\r\n    const onBlurHandler = (e: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\r\n        if (e.target.id === \"password\") {\r\n            // password validator\r\n        }\r\n    }\r\n\r\n    const onSubmitHandler = (e: React.FormEvent) => {\r\n        e.preventDefault()\r\n        if (email.value === '' || password.value === '') {\r\n            return\r\n        } else {\r\n            dispatch(authenticate(email.value, password.value))\r\n        }\r\n    }\r\n\r\n    if (user.data) {\r\n        return <Redirect to='/home' />\r\n    }\r\n\r\n    return <div className='center-middle-screen'>\r\n        {user.error ? <ErrorMessage message={user.error} /> : null}\r\n\r\n        <Typography variant=\"h5\" align=\"center\" gutterBottom>{t('login')}</Typography>\r\n        <form onSubmit={onSubmitHandler}>\r\n            <TextField\r\n                id=\"email\"\r\n                type=\"email\"\r\n                label={email.error}\r\n                value={email.value}\r\n                placeholder={t('formPlaceholders.email')}\r\n                onChange={onChangeHandler}\r\n                onBlur={onBlurHandler} />\r\n            <TextField\r\n                id=\"password\"\r\n                type=\"password\"\r\n                label={password.error}\r\n                value={password.value}\r\n                placeholder={t('formPlaceholders.password')}\r\n                onChange={onChangeHandler}\r\n                onBlur={onBlurHandler} />\r\n            <Button type=\"submit\">{t('login')}</Button>\r\n            <Typography variant=\"body1\" align=\"center\" gutterBottom>{t('or')}</Typography>\r\n            <LinkButton to=\"/register\">{t('signup')}</LinkButton>\r\n        </form>\r\n    </div>\r\n}\r\n\r\nexport default LoginPage","import React from 'react'\r\nimport { CircularProgress } from '@material-ui/core'\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            color: \"#00205b\",\r\n        },\r\n    }),\r\n)\r\n\r\nconst CircularProgressCustom: React.FC = () => {\r\n    const classes = useStyles()\r\n\r\n    return <CircularProgress className={classes.root} />\r\n}\r\n\r\nexport default CircularProgressCustom","export default __webpack_public_path__ + \"static/media/YARA_RGB.67da0ad6.png\";","import React from 'react';\nimport CircularProgress from '../circular-progress/CircularProgress';\nimport yara_logo from '../../assets/YARA_RGB.png';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            marginBottom: theme.spacing(2),\n        }\n    })\n);\n\nconst LoadingScreen: React.FC = () => {\n    const classes = useStyles()\n\n    return <div className=\"center-middle-screen\">\n        <img className={classes.root} src={yara_logo} alt=\"yara logo\" />\n        <br />\n        <CircularProgress />\n    </div>\n}\n\nexport default LoadingScreen;","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport LoadingScreen from '../../components/loadingScreen/LoadingScreen'\r\nimport { RootState } from \"../../store/types\"\r\n\r\nconst LoadingPage: React.FC = (props) => {\r\n    const user = useSelector((state: RootState) => state.auth)\r\n\r\n    if (user.isDone === true) {\r\n        if (user.data === null) {\r\n            return <Redirect to='/login' />\r\n        } else {\r\n            return <Redirect to='/home' />\r\n        }\r\n    }\r\n\r\n    return <LoadingScreen />\r\n}\r\n\r\nexport default LoadingPage","import React from 'react'\r\nimport { List, ListSubheader } from '@material-ui/core'\r\n\r\ninterface ListProps {\r\n    subHeader?: string\r\n}\r\n\r\nconst ListComponent: React.FC<ListProps> = props => {\r\n    return <List>\r\n        <ListSubheader>{props.subHeader}</ListSubheader>\r\n        {props.children}\r\n    </List>\r\n}\r\n\r\nexport default ListComponent","import React from 'react'\nimport { Button, createStyles, makeStyles, Theme } from '@material-ui/core'\n\ninterface ComponentProps {\n    onClick: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            marginLeft: theme.spacing(1),\n            paddingTop: theme.spacing(1),\n            paddingBottom: theme.spacing(1),\n            color: \"#00205b\"\n        },\n    }),\n)\n\nconst LanguageButton: React.FC<ComponentProps> = props => {\n    const classes = useStyles();\n\n    return <Button className={classes.root} onClick={props.onClick}>{props.children}</Button>\n}\n\nexport default LanguageButton;","import React from 'react'\r\nimport { ListItem, ListItemText } from '@material-ui/core'\r\n\r\ninterface ListItemProps {\r\n    disabled?: boolean\r\n    content: string\r\n    onClick?: () => void\r\n}\r\n\r\nconst ListItemComponent: React.FC<ListItemProps> = props => {\r\n    return <ListItem button divider disabled={props.disabled}>\r\n        <ListItemText primary={props.content} onClick={props.onClick} />\r\n    </ListItem>\r\n}\r\n\r\nexport default ListItemComponent","import { Avatar, CardHeader, createStyles, makeStyles, Theme } from '@material-ui/core';\nimport React from 'react'\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../store/types';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        avatar: {\n            backgroundColor: '#00205b',\n        },\n    }),\n);\n\nconst UserInfo: React.FC = (props) => {\n    const user = useSelector((state: RootState) => state.auth.data)\n    const geolocation = useSelector((state: RootState) => state.geolocation)\n    const classes = useStyles()\n\n    return <CardHeader\n        avatar={\n            <Avatar aria-label=\"recipe\" className={classes.avatar}>\n                {user?.email[0].toUpperCase()}\n            </Avatar>\n        }\n        title={user?.email}\n        subheader={geolocation.location ? geolocation.location : null}\n    />\n}\n\nexport default UserInfo","import React, { Fragment } from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\n\ninterface ComponentProps {\n    weather: string | null;\n}\n\nconst WeatherInfo: React.FC<ComponentProps> = props => {\n    const { t } = useTranslation();\n    const [text, temp] = props.weather?.split('&') || [null, null];\n\n    return <Fragment>\n        {props.weather === null ? null :\n            <Box m={0} p={0}>\n                <Typography variant=\"subtitle2\" align=\"right\">{text}</Typography>\n                <Typography variant=\"subtitle2\" align=\"right\">{`${t('temp')}${temp}`}</Typography>\n            </Box>}\n    </Fragment>\n}\n\nexport default WeatherInfo;","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { ListItem as ListItemOriginal, AppBar, Toolbar, IconButton, Typography, Drawer, CssBaseline, ListItemText, ListItemSecondaryAction, Divider, createStyles, makeStyles, Theme } from '@material-ui/core'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport List from '../../components/list/List'\r\nimport LanguageButton from '../buttons/LanguageButton'\r\nimport ListItem from '../../components/list/list-item/ListItem'\r\nimport { getLocationWeather, logout } from '../../store/actions'\r\nimport { RootState } from '../../store/types'\r\nimport UserInfo from '../user-info/UserInfo'\r\nimport WeatherInfo from '../weather-info/WeatherInfo'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n            display: 'flex'\r\n        },\r\n        appBar: {\r\n            backgroundColor: \"#00205b\",\r\n            position: 'absolute',\r\n            zIndex: theme.zIndex.drawer + 1\r\n        },\r\n        menuButton: {\r\n            marginRight: theme.spacing(1),\r\n        },\r\n        addButton: {\r\n            marginLeft: theme.spacing(0),\r\n        },\r\n        title: {\r\n            flexGrow: 1,\r\n        },\r\n        // new\r\n        drawer: {\r\n            width: '66%',\r\n            flexShrink: 0,\r\n        },\r\n        drawerPaper: {\r\n            width: '66%',\r\n        },\r\n        drawerContainer: {\r\n            overflow: 'auto',\r\n        }\r\n    }),\r\n)\r\n\r\nconst AppBarComponent: React.FC = props => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const { t, i18n } = useTranslation();\r\n    const geolocation = useSelector((state: RootState) => state.geolocation)\r\n    const [isOpen, setIsOpen] = useState<boolean>(false)\r\n    const [update, setUpdate] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        dispatch(getLocationWeather())\r\n    }, [dispatch, update])\r\n\r\n    const changeLang = (lang: string): void => {\r\n        i18n.changeLanguage(lang)\r\n        setUpdate(!update)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar position=\"fixed\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" onClick={() => setIsOpen(!isOpen)}>\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h5\" className={classes.title}>TankMix</Typography>\r\n                    <WeatherInfo weather={geolocation.weather} />\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Drawer className={classes.drawer} open={isOpen} variant=\"persistent\" classes={{ paper: classes.drawerPaper }}>\r\n                <Toolbar />\r\n                <div className={classes.drawerContainer}>\r\n                    <UserInfo />\r\n                    <List>\r\n                        <ListItem content={t('home')} onClick={() => history.replace('/home')} />\r\n                        <ListItem content={t('myMixResults')} onClick={() => history.replace('/user-mix-results')} />\r\n                        <ListItemOriginal>\r\n                            <ListItemText primary={t('language')} />\r\n                            <ListItemSecondaryAction>\r\n                                <LanguageButton onClick={() => changeLang('en')}>EN</LanguageButton>\r\n                                <LanguageButton onClick={() => changeLang('bg')}>{t('bg')}</LanguageButton>\r\n                            </ListItemSecondaryAction>\r\n                        </ListItemOriginal>\r\n                        <Divider />\r\n                        <ListItem content={t('qrCodeScanner')} onClick={() => console.log('QR')} />\r\n                        <ListItem content={t('logout')} onClick={() => dispatch(logout())} />\r\n                    </List>\r\n                </div>\r\n            </Drawer>\r\n            <Toolbar />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppBarComponent","import React, { Fragment } from 'react'\r\nimport AppBarComponent from '../components/app-bar/AppBar'\r\n\r\ndeclare let StatusBar: any;\r\n\r\nconst PageLayout: React.FC = (props) => {\r\n    StatusBar.show();\r\n    StatusBar.backgroundColorByHexString('#00205b');\r\n    StatusBar.styleLightContent();\r\n\r\n\r\n    return <Fragment>\r\n        <AppBarComponent />\r\n        {props.children}\r\n    </Fragment>\r\n}\r\n\r\nexport default PageLayout","import { createStyles, Fab, makeStyles, Theme, Tooltip } from '@material-ui/core';\nimport React from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            position: 'absolute',\n            bottom: theme.spacing(3),\n            right: theme.spacing(3),\n            backgroundColor: '#00205b',\n            color: 'white',\n\n            '&:hover': {\n                backgroundColor: '#00205b'\n            }\n        },\n    }),\n);\n\nconst TooltipAdd: React.FC = () => {\n    const classes = useStyles();\n    const history = useHistory();\n\n    return <Tooltip title=''>\n        <Fab className={classes.root} onClick={() => history.push('/add-product')}>\n            <AddIcon />\n        </Fab>\n    </Tooltip>\n}\n\nexport default TooltipAdd","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport PageLayout from '../PageLayout'\r\nimport TooltipAdd from '../../components/tooltip/TooltipAdd'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from '../../store/types'\r\nimport { useTranslation } from 'react-i18next'\r\nimport Button from '../../components/buttons/Button'\r\n\r\nconst HomePage: React.FC = props => {\r\n    const { t } = useTranslation();\r\n    const history = useHistory();\r\n    const user = useSelector((state: RootState) => state.auth)\r\n\r\n    return <PageLayout>\r\n        <div className=\"center-middle-screen\">\r\n            <Button\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n                onClick={() => history.push('/mix-products')}\r\n            >{t('mixProducts')}</Button>\r\n        </div>\r\n        {user.data?.isAdmin === 1 ? <TooltipAdd /> : null}\r\n    </PageLayout >\r\n}\r\n\r\nexport default HomePage","import React from 'react'\r\nimport { ListItem, ListItemText, ListItemSecondaryAction, IconButton } from '@material-ui/core'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever'\r\n\r\ninterface ListItemProps {\r\n    content: string\r\n    onClick: () => void\r\n}\r\n\r\nconst ListItemComponent: React.FC<ListItemProps> = props => {\r\n    return <ListItem button divider>\r\n        <ListItemText primary={props.content} />\r\n        <ListItemSecondaryAction>\r\n            <IconButton onClick={props.onClick}>\r\n                <DeleteForeverIcon />\r\n            </IconButton>\r\n        </ListItemSecondaryAction>\r\n    </ListItem>\r\n}\r\n\r\nexport default ListItemComponent","import React from 'react'\r\nimport { Backdrop } from '@material-ui/core'\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\r\nimport CircularProgress from '../../components/circular-progress/CircularProgress'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        backdrop: {\r\n            zIndex: theme.zIndex.drawer + 1,\r\n            color: '#fff',\r\n        },\r\n    }),\r\n)\r\n\r\ninterface BackdropProps {\r\n    open: boolean\r\n}\r\n\r\nconst BackdropCustom: React.FC<BackdropProps> = props => {\r\n    const classes = useStyles()\r\n    // const [open, setOpen] = useState(false)\r\n\r\n    // const handleClose = () => {\r\n    //     setOpen(false)\r\n    // };\r\n    // const handleToggle = () => {\r\n    //     setOpen(!open)\r\n    // };\r\n\r\n    return <Backdrop className={classes.backdrop} open={props.open}>\r\n        <CircularProgress />\r\n    </Backdrop>\r\n}\r\n\r\nexport default BackdropCustom","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport PageLayout from \"../PageLayout\";\r\nimport List from \"../../components/list/List\";\r\nimport ListItemComponent from \"../../components/list/list-item/ListItem\";\r\nimport ListItemAction from \"../../components/list/list-item-action/ListItemAction\";\r\nimport Backdrop from \"../../components/backdrop/Backdrop\";\r\nimport Button from \"../../components/buttons/Button\";\r\nimport { RootState } from \"../../store/types\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { mixResult } from \"../../store/actions\";\r\nimport { Product } from \"../../interfaces\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nconst MixProductsPage: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const products = useSelector((state: RootState) => state.products);\r\n  const user = useSelector((state: RootState) => state.auth);\r\n  const result = useSelector((state: RootState) => state.result);\r\n  const [selectedProducts, setSelectedProducts] = useState<Product[]>([]);\r\n\r\n  const renderSelectedProduts = () => {\r\n    return (\r\n      <List subHeader={t('selectedProducts')}>\r\n        {selectedProducts.map(item => <ListItemAction content={item.name} key={item.name} onClick={() => onDeleteListHandler(item)} />)}\r\n      </List>\r\n    );\r\n  };\r\n\r\n  const renderProducts = () => {\r\n    return (\r\n      <List subHeader={t('products')}>\r\n        {products.data!.sort().map(item => (\r\n          <ListItemComponent content={item.name} key={item.name} onClick={() => onListItemClickHandler(item)}\r\n            disabled={(selectedProducts.some(x => x.name === item.name) || selectedProducts.length === 2) ? true : false}\r\n          />\r\n        ))}\r\n      </List>\r\n    );\r\n  };\r\n\r\n  const onListItemClickHandler = (item: Product): any => {\r\n    setSelectedProducts(prevState => {\r\n      const newArray = prevState.map(x => ({ ...x }));\r\n      newArray.push({ ...item });\r\n      return newArray;\r\n    });\r\n  };\r\n\r\n  const onDeleteListHandler = (item: Product) => {\r\n    setSelectedProducts(prevState => prevState.filter(x => x.name !== item.name));\r\n  };\r\n\r\n  const onClickCreateMixHandler = () => {\r\n    dispatch(mixResult(user.data!.email, selectedProducts))\r\n  };\r\n\r\n  if (result.done) {\r\n    return <Redirect to=\"/mix-result\" />\r\n  }\r\n\r\n  return (\r\n    <PageLayout>\r\n      {products.data !== null ?\r\n        <Box width={1}>\r\n          <Backdrop open={result.loading} />\r\n          {selectedProducts.length > 0 ? renderSelectedProduts() : null}\r\n          {selectedProducts.length === 2 ? (\r\n            <Box px={2}>\r\n              <Button onClick={onClickCreateMixHandler}>{t('createMix')}</Button>\r\n            </Box>\r\n          ) : null}\r\n          {products.data.length > 0 ? renderProducts() : null}\r\n        </Box> : null}\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default MixProductsPage;\r\n","import React, { Fragment } from 'react'\n\ninterface ComponentProps {\n    source: string\n}\n\nconst ImageConponent: React.FC<ComponentProps> = (props) => {\n    return <Fragment>\n        {props.source.startsWith('http') ?\n            <img src={props.source} alt=\"img\" height=\"150\" /> :\n            <img src={`data:image/jpeg;base64,${props.source}`} alt=\"img\" height=\"150\" />\n        }\n    </Fragment>\n}\n\nexport default ImageConponent;","import React from 'react'\nimport { Card, CardContent, createStyles, makeStyles, Theme, Typography } from '@material-ui/core'\nimport { Product } from '../../interfaces';\nimport ImageConponent from '../product-img/ImageComponent';\n\ninterface ComponentProps {\n    product: Product\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '66%',\n            margin: '0 auto',\n            marginBlock: theme.spacing(2)\n        }\n    })\n);\n\n\nconst ResultProductCard: React.FC<ComponentProps> = props => {\n    const classes = useStyles();\n\n    return <Card className={classes.root} variant=\"outlined\">\n        <CardContent>\n            {props.product.imageURL !== null ? <ImageConponent source={props.product.imageURL} /> : null}\n            <Typography variant='h5'>{props.product.name}</Typography>\n            <Typography variant='body1'>{props.product.description}</Typography>\n        </CardContent>\n    </Card>\n}\n\nexport default ResultProductCard;","import React, { useEffect } from 'react'\r\nimport { Link as RouterLink } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from '../../store/types'\r\nimport PageLayout from '../PageLayout'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ResultProductCard from '../../components/result-product-card/ResultProductCard'\r\nimport { Button, createStyles, makeStyles, Theme, Typography } from '@material-ui/core';\r\nimport { mixResultCleanUp } from '../../store/actions'\r\nimport { useTranslation } from 'react-i18next'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            width: '50%',\r\n            margin: '0 auto',\r\n            marginTop: theme.spacing(1)\r\n        }\r\n    })\r\n);\r\n\r\nconst MixResultPage: React.FC = props => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const result = useSelector((state: RootState) => state.result)\r\n\r\n    useEffect(() => {\r\n\r\n        return function cleanup() {\r\n            dispatch(mixResultCleanUp())\r\n        }\r\n    }, [dispatch])\r\n\r\n    return <PageLayout>\r\n        <div className='center-middle-screen'>\r\n            <Typography variant=\"h4\" gutterBottom>{t('mixResult')}</Typography>\r\n            <ResultProductCard product={result.data[0]} />\r\n            <AddIcon />\r\n            <ResultProductCard product={result.data[1]} />\r\n            <Button className={classes.root} color=\"primary\" component={RouterLink} to='/home' replace>{t('home')}</Button>\r\n        </div>\r\n    </PageLayout>\r\n}\r\n\r\nexport default MixResultPage","declare let Camera: any\n\nexport const actionSheetOptions = {\n    title: 'Select Photo',\n    buttonLabels: ['Camera', 'Gallery'],\n    androidEnableCancelButton: true, // default false\n    addCancelButtonWithLabel: 'Cancel',\n    // addDestructiveButtonWithLabel: 'Delete it',\n    // position: [20, 40], // for iPad pass in the [x, y] position of the popover\n    // destructiveButtonLast: true // you can choose where the destructive button is shown\n}\n\nexport const setGetPictureOptions = (source: number): object => {\n    const type = source === 0 ? Camera.SourceType.CAMERA : Camera.SourceType.PHOTOLIBRARY\n    return {\n        quality: 75,\n        destinationType: Camera.DestinationType.DATA_URL,\n        sourceType: type,\n        saveToPhotoAlbum: false\n    }\n}","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PageLayout from '../PageLayout'\r\nimport TextField from '../../components/text-field/TextField'\r\nimport Button from '../../components/buttons/Button'\r\nimport { InputValues } from '../../interfaces'\r\nimport { Typography } from '@material-ui/core'\r\nimport { createProduct, createProductCleanup } from '../../store/actions'\r\nimport { RootState } from '../../store/types'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { actionSheetOptions, setGetPictureOptions } from '../../utils/options'\r\n\r\ndeclare let navigator: any;\r\ndeclare let Camera: any;\r\ndeclare let window: any;\r\n\r\nconst AddProductPage: React.FC = props => {\r\n    const { t } = useTranslation();\r\n    const dispatch = useDispatch();\r\n    const products = useSelector((state: RootState) => state.products)\r\n    const [productName, setProductName] = useState<InputValues>({ value: '', error: '' });\r\n    const [productDesc, setProductDesc] = useState<InputValues>({ value: '', error: '' });\r\n    const [image, setImage] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            dispatch(createProductCleanup())\r\n        }\r\n    }, [dispatch])\r\n\r\n    const onSubmitHandler = (e: React.FormEvent) => {\r\n        e.preventDefault()\r\n        if (productName.value === '' || productDesc.value === '') {\r\n            return\r\n        }\r\n        dispatch(createProduct(productName.value, productDesc.value, image))\r\n    }\r\n\r\n    const actionSheetCallback = (buttonIndex: number) => {\r\n        if (buttonIndex === 1) {\r\n            navigator.camera.getPicture((photo: string) => {\r\n                setImage(photo)\r\n            }, (err: string) => alert(err), {\r\n                quality: 75,\r\n                destinationType: Camera.DestinationType.DATA_URL,\r\n                sourceType: Camera.PictureSourceType.CAMERA,\r\n                saveToPhotoAlbum: false\r\n            })\r\n        } else if (buttonIndex === 2) {\r\n            navigator.camera.getPicture((photo: string) => {\r\n                setImage(photo)\r\n            }, (err: string) => alert(err), {\r\n                quality: 75,\r\n                destinationType: Camera.DestinationType.DATA_URL,\r\n                sourceType: Camera.PictureSourceType.PHOTOLIBRARY,\r\n                saveToPhotoAlbum: false\r\n            })\r\n        }\r\n    };\r\n\r\n    if (products.isAddingDone) {\r\n        return <Redirect to='/home' />\r\n    }\r\n\r\n    return <PageLayout>\r\n        <div className=\"center-middle-screen\">\r\n            <Typography variant=\"h5\" align=\"center\" gutterBottom>{t('newProduct')}</Typography>\r\n            <form onSubmit={onSubmitHandler}>\r\n                <TextField\r\n                    id=\"productName\"\r\n                    type=\"text\"\r\n                    label={productName.error}\r\n                    value={productName.value}\r\n                    placeholder={t('formPlaceholders.name')}\r\n                    onChange={(e) => setProductName(prevState => ({ ...prevState, value: e.target.value }))}\r\n                    onBlur={(e) => setProductName(prevState => ({ ...prevState, error: (e.target.value === '' ? t('formErrors.cannotBeEmpty') : '') }))} />\r\n                <TextField\r\n                    id=\"productDesc\"\r\n                    type=\"text\"\r\n                    multiline={true}\r\n                    label={productDesc.error}\r\n                    value={productDesc.value}\r\n                    placeholder={t('formPlaceholders.description')}\r\n                    onChange={(e) => setProductDesc(prevState => ({ ...prevState, value: e.target.value }))}\r\n                    onBlur={(e) => setProductDesc(prevState => ({ ...prevState, error: (e.target.value === '' ? t('formErrors.cannotBeEmpty') : '') }))} />\r\n                <Button onClick={() => window.plugins.actionsheet.show(actionSheetOptions, actionSheetCallback)}>{t('addPhoto')}</Button>\r\n                <Button type=\"submit\">{t('addProduct')}</Button>\r\n            </form>\r\n        </div>\r\n    </PageLayout>\r\n}\r\n\r\nexport default AddProductPage","import React from 'react';\nimport { ListItem, ListItemText } from '@material-ui/core';\nimport { MixResult } from '../../../interfaces';\nimport { useTranslation } from 'react-i18next';\n\ninterface ComponentProps {\n    data: MixResult;\n}\n\nconst ListItemResult: React.FC<ComponentProps> = props => {\n    const { t } = useTranslation()\n    const { f_product, s_product, datetime } = props.data\n\n    return <ListItem button={false} divider>\n        <ListItemText\n            primary={`${t('mixOf')} ${f_product} ${t('and')} ${s_product}`}\n            secondary={t('date', { date: new Date(datetime) })}\n        />\n    </ListItem>\n}\n\nexport default ListItemResult;","import React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useSelector } from 'react-redux'\nimport List from '../../components/list/List'\nimport { RootState } from '../../store/types'\nimport ListItemResult from '../../components/list/list-item-result/ListItemResult'\nimport PageLayout from '../PageLayout'\n\nconst UserResultPage: React.FC = () => {\n    const userResults = useSelector((state: RootState) => state.auth.results)\n    const { t } = useTranslation()\n\n    const renderResults = () => {\n        return userResults.reverse().map((x, i) => {\n            return <ListItemResult key={i} data={x} />\n        })\n    }\n\n    return <PageLayout>\n        <List subHeader={t('mostRecentResults')}>\n            {renderResults()}\n        </List>\n    </PageLayout>\n}\n\nexport default UserResultPage","import React, { useEffect } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from './store/types'\r\n\r\nimport { initialAuthCheckAndSetup } from './store/actions/index'\r\n\r\nimport RegisterPage from './pages/register-page/RegisterPage'\r\nimport LoginPage from './pages/login-page/LoginPage'\r\nimport LoadingPage from './pages/loading-page/LoadingPage'\r\nimport HomePage from './pages/home-page/HomePage'\r\nimport MixPorductsPage from './pages/mix-products-page/MixProductsPage'\r\nimport MixResultPage from './pages/mix-result-page/MixResultPage'\r\nimport AddProductPage from './pages/add-product-page/AddProductPage'\r\nimport UserResultPage from './pages/user-results-page/UserResultsPage'\r\n\r\nconst App: React.FC = () => {\r\n  const authSelected = (state: RootState) => state.auth\r\n  const user = useSelector(authSelected)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(initialAuthCheckAndSetup())\r\n  }, [dispatch])\r\n\r\n  return <Switch>\r\n    <Route exact path=\"/\" component={LoadingPage} />\r\n    <Route path=\"/login\">\r\n      {user.data === null ? <LoginPage /> : <Redirect to='/home' />}\r\n    </Route>\r\n    <Route path=\"/register\">\r\n      {user.data === null ? <RegisterPage /> : <Redirect to='/home' />}\r\n    </Route>\r\n    <Route path=\"/home\">\r\n      {user.data === null ? <Redirect to='/login' /> : <HomePage />}\r\n    </Route>\r\n    <Route path=\"/mix-products\">\r\n      {user.data === null ? <Redirect to='/login' /> : <MixPorductsPage />}\r\n    </Route>\r\n    <Route path=\"/mix-result\">\r\n      {user.data === null ? <Redirect to='/login' /> : <MixResultPage />}\r\n    </Route>\r\n    <Route path=\"/add-product\">\r\n      {user.data === null ? <Redirect to='/login' /> : <AddProductPage />}\r\n    </Route>\r\n    <Route path=\"/user-mix-results\">\r\n      {user.data === null ? <Redirect to='/login' /> : <UserResultPage />}\r\n    </Route>\r\n  </Switch>\r\n}\r\n\r\nexport default App","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport en from './locales/en/translation.json';\nimport bg from './locales/bg/translation.json';\nimport { initReactI18next } from 'react-i18next';\nimport moment from 'moment';\n\nconst options = {\n  // order and from where user language should be detected\n  order: ['querystring', 'cookie', 'localStorage', 'sessionStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],\n\n  // keys or params to lookup language from\n  lookupQuerystring: 'lng',\n  lookupCookie: 'i18next',\n  lookupLocalStorage: 'i18nextLng',\n  lookupSessionStorage: 'i18nextLng',\n  lookupFromPathIndex: 0,\n  lookupFromSubdomainIndex: 0,\n\n  // cache user language on\n  caches: ['localStorage', 'cookie'],\n  excludeCacheFor: ['cimode'], // languages to not persist (cookie, localStorage)\n}\n\nconst resources = {\n  en: {\n    translation: en\n  },\n  bg: {\n    translation: bg\n  }\n}\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources: resources,\n    detection: options,\n    fallbackLng: \"en\",\n\n    interpolation: {\n      escapeValue: false,\n      format: function (value, format) {\n        if (value instanceof Date) return moment(value).format(format);\n        return value;\n      }\n\n    },\n  });\n\nexport default i18n;","export const createTables = (tx: any) => {\n    tx.executeSql('CREATE TABLE IF NOT EXISTS users (email TEXT UNIQUE , password TEXT, isAdmin INTEGER)')\n    tx.executeSql('CREATE TABLE IF NOT EXISTS products (name TEXT UNIQUE, description TEXT, imageURL)')\n    tx.executeSql('CREATE TABLE IF NOT EXISTS errors (user_email, message, stacktrace, datetime)')\n    tx.executeSql('CREATE TABLE IF NOT EXISTS results (user_email, f_product, s_product, datetime)')\n}\n\nexport const seedTables = (tx: any) => {\n    tx.executeSql('SELECT count(*) AS productsCount FROM products', [], function (tx: any, rs: any) {\n        if (rs.rows.item(0).productsCount === 0) {\n            tx.executeSql('INSERT INTO products VALUES (?1,?2,?3)', ['Yara Liva', 'Yara Liva Description', 'https://brandcenter.yara.com/fr/gallery/12632/images/lowres/faffd2805174417c9f29b648d2a598ee.png'])\n            tx.executeSql('INSERT INTO products VALUES (?1,?2,?3)', ['Yara Mila', 'Yara Mila Description', 'https://brandcenter.yara.com/fr/gallery/12632/images/lowres/9f4bfd3392cc4afa88bcda9e1bae4d12.png'])\n            tx.executeSql('INSERT INTO products VALUES (?1,?2,?3)', ['Yara Bela', 'Yara Bela Description', 'https://brandcenter.yara.com/fr/gallery/12632/images/lowres/6c3263fb17654accafebbb5523a50ef2.png'])\n            tx.executeSql('INSERT INTO products VALUES (?1,?2,?3)', ['Yara Vera', 'Yara Vera Description', 'https://brandcenter.yara.com/fr/gallery/12632/images/lowres/e22b2270782047aca40161e3a55a6981.png'])\n            tx.executeSql('INSERT INTO products VALUES (?1,?2,?3)', ['Yara Vita', 'Yara Vita Description', 'https://brandcenter.yara.com/fr/gallery/12632/images/lowres/a401c1234c244c18bd7fe62fb3b622a0.png'])\n            tx.executeSql('INSERT INTO products VALUES (?1,?2,?3)', ['Yara Tera', 'Yara Tera Description', 'https://brandcenter.yara.com/fr/gallery/12632/images/lowres/8ce4d17be6da4f5ca04291fe3cdea493.png'])\n            tx.executeSql('INSERT INTO products VALUES (?1,?2,?3)', ['Yara Rega', 'Yara Rega Description', 'https://brandcenter.yara.com/fr/gallery/12632/images/lowres/36c5a49a06ae479ea744ddf16b5ce575.png'])\n            tx.executeSql('INSERT INTO products VALUES (?1,?2,?3)', ['Yara Basa', 'Yara Basa Description', 'https://brandcenter.yara.com/fr/gallery/12632/images/lowres/f66b241cffee49018102eaad0376f951.png'])\n            tx.executeSql('INSERT INTO users VALUES (?1,?2,?3)', ['we1000@abv.bg', '14', 1])\n        }\n    }, function (tx: any, error: any) {\n        console.log('SELECT error: ' + error.message)\n    })\n}","import { UserState } from '../types'\nimport { AuthActionTypes, AUTH_FAILED, AUTH_LOGOUT, AUTH_START, AUTH_SUCCESS, ADD_RESULT_TO_USER_RESULTS } from '../actions/actionTypes'\n\nconst initialState: UserState = {\n    data: null,\n    isDone: false,\n    results: [],\n    error: null\n}\n\nconst reducer = (state = initialState, action: AuthActionTypes) => {\n    switch (action.type) {\n        case AUTH_START:\n            return {\n                ...initialState\n            }\n        case AUTH_SUCCESS:\n            return {\n                ...state,\n                data: { ...action.data },\n                results: [...action.dataResults],\n                isDone: true,\n                error: null\n            }\n        case AUTH_FAILED:\n            return {\n                ...state,\n                isDone: true,\n                error: action.err\n            }\n        case ADD_RESULT_TO_USER_RESULTS:\n            return {\n                ...state,\n                results: [...state.results, action.data]\n            }\n        case AUTH_LOGOUT:\n            return {\n                ...initialState,\n                isDone: true\n            }\n        // case actionTypes.REMOVE_ERROR:\n        //     return {\n        //         ...state,\n        //         error: null\n        //     }\n        default:\n            return state\n    }\n}\n\nexport default reducer","import { ProductsState } from '../types'\nimport { GET_PRODUCTS_FAILED, GET_PRODUCTS_SUCCESS, GetProductsActionTypes, CREATE_PRODUCT_FAILED, CREATE_PRODUCT_SUCCESS, CREATE_PRODUCT_CLEANUP } from '../actions/actionTypes'\n\nconst initialState: ProductsState = {\n    data: null,\n    isAddingDone: false,\n    error: null\n}\n\nconst reducer = (state = initialState, action: GetProductsActionTypes) => {\n    switch (action.type) {\n        case GET_PRODUCTS_SUCCESS:\n            return {\n                ...state,\n                data: [...action.data],\n                error: null\n            }\n        case GET_PRODUCTS_FAILED:\n            return {\n                ...state,\n                error: action.err\n            }\n        case CREATE_PRODUCT_SUCCESS:\n            console.log(action.data)\n            return {\n                ...state,\n                data: [...state.data!, action.data],\n                isAddingDone: true,\n                error: null\n            }\n        case CREATE_PRODUCT_FAILED:\n            return {\n                ...state,\n                error: action.err\n            }\n        case CREATE_PRODUCT_CLEANUP:\n            return {\n                ...state,\n                isAddingDone: false,\n                error: null\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer","import { ResultState } from '../types'\nimport { MIX_RESULT_FAILED, MIX_RESULT_START, MIX_RESULT_SUCCESS, MixResultActionTypes, MIX_RESULT_CLEANUP } from '../actions/actionTypes'\n\nconst initialState: ResultState = {\n    data: [],\n    loading: false,\n    done: false,\n    error: null\n}\n\nconst reducer = (state = initialState, action: MixResultActionTypes) => {\n    switch (action.type) {\n        case MIX_RESULT_START:\n            return {\n                ...initialState,\n                done: false,\n                loading: true\n            }\n        case MIX_RESULT_SUCCESS:\n            return {\n                ...state,\n                data: [...action.data],\n                done: true,\n                loading: false,\n                error: null\n            }\n        case MIX_RESULT_FAILED:\n            return {\n                ...state,\n                loading: false,\n                error: action.err\n            }\n        case MIX_RESULT_CLEANUP:\n            return {\n                ...initialState\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer","import { Geolocation } from '../types'\nimport { GEOLOCATION_FAILED, GEOLOCATION_SUCCESS, GeolocationActionTypes } from '../actions/actionTypes'\n\nconst initialState: Geolocation = {\n    location: null,\n    weather: null\n}\n\nconst reducer = (state = initialState, action: GeolocationActionTypes) => {\n    switch (action.type) {\n        case GEOLOCATION_SUCCESS:\n            return {\n                ...state,\n                location: action.location,\n                weather: action.weather\n            }\n        case GEOLOCATION_FAILED:\n            return {\n                ...initialState,\n            }\n        default:\n            return state\n    }\n}\n\nexport default reducer","import 'cordova_script'\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { HashRouter as Router } from 'react-router-dom'\r\nimport './index.css'\r\nimport App from './App'\r\nimport './i18n'\r\nimport 'fontsource-roboto';\r\nimport { createTables, seedTables } from './utils/dbSetupFuncs'\r\n\r\nimport { Provider } from 'react-redux'\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport auth from './store/reducers/auth'\r\nimport products from './store/reducers/products'\r\nimport result from './store/reducers/result'\r\nimport geolocation from './store/reducers/geolocation'\r\nimport { notificationSetup } from './utils/notificationSetup'\r\n\r\ndeclare let window: any;\r\ndeclare let StatusBar: any;\r\n// declare let QRScanner: any;\r\nwindow.db = null;\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({ auth, products, result, geolocation });\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(\r\n    applyMiddleware(thunk)\r\n));\r\n\r\ndocument.addEventListener('deviceready', async () => {\r\n    window.db = window.sqlitePlugin.openDatabase({\r\n        name: 'my.db',\r\n        location: 'default'\r\n    })\r\n    // QRScanner.prepare(onDone); // show the prompt\r\n\r\n    // function onDone(err: any, status: any) {\r\n    //     if (err) {\r\n    //         // here we can handle errors and clean up any loose ends.\r\n    //         console.error(err);\r\n    //     }\r\n    //     if (status.authorized) {\r\n    //         // W00t, you have camera access and the scanner is initialized.\r\n    //         // QRscanner.show() should feel very fast.\r\n    //     } else if (status.denied) {\r\n    //         // The video preview will remain black, and scanning is disabled. We can\r\n    //         // try to ask the user to change their mind, but we'll have to send them\r\n    //         // to their device settings with `QRScanner.openSettings()`.\r\n    //     } else {\r\n    //         // we didn't get permission, but we didn't get permanently denied. (On\r\n    //         // Android, a denial isn't permanent unless the user checks the \"Don't\r\n    //         // ask again\" box.) We can ask again at the next relevant opportunity.\r\n    //     }\r\n    // }\r\n\r\n    StatusBar.hide()\r\n    notificationSetup()\r\n\r\n    window.db.transaction(function (tx: any) {\r\n        createTables(tx)\r\n    }, function (error: any) {\r\n        console.log('Transaction ERROR: ' + error.message)\r\n    }, function (tx: any) {\r\n        window.db.transaction(function (tx: any) {\r\n            seedTables(tx)\r\n        }, function (error: any) {\r\n            console.log('Transaction ERROR: ' + error.message)\r\n        }, function (tx: any) {\r\n            ReactDOM.render(\r\n                <Provider store={store}>\r\n                    <Router>\r\n                        <App />\r\n                    </Router>\r\n                </Provider>,\r\n                document.getElementById('root')\r\n            )\r\n        })\r\n    })\r\n}, false)","declare let cordova: any;\n\nexport function notificationSetup() {\n    cordova.plugins.notification.local.setDefaults({\n        smallIcon: 'res://icons/logo-mono-version.png',\n        foreground: true,\n        vibrate: true\n    });\n};"],"sourceRoot":""}